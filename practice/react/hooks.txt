1) useCallback  --> it's a hook provided by react to cache function defition between render.
    hint: when we pass function as props it always create nee reference.

2)useContext --> to read data from any component even it's not in tree.

3)useDebugValue --> useDebugValue is a React Hook that lets you add a label to a custom Hook in React DevTools.

4)useDeferredValue --> useDeferredValue is a React Hook that lets you defer updating a part of the UI.
    hint: when you type something until new search result comes it shows previous value.

5) useEffect --> useEffect is a React Hook that lets you synchronize a component with an external system.

6) useId --> useId is a React Hook for generating unique IDs that can be passed to accessibility attributes.

7) useImerativeRef --> useImperativeHandle is a React Hook that lets you customize the handle exposed as a ref.
    hint: let's to expose only focus event to parent method.

8) useInsertionEffect --> useInsertionEffect allows inserting elements into the DOM before any layout effects fire.

9)useLayoutEffect --> useLayoutEffect is a version of useEffect that fires before the browser repaints the screen.

10) useMemo --> useMemo is a React Hook that lets you cache the result of a calculation between re-renders.

11) useReducer --> useReducer is a React Hook that lets you add a reducer to your component.

12) useRef --> useRef is a React Hook that lets you reference a value thatâ€™s not needed for rendering.
    hint: manipulate DOM
    
13) useState --> useState is a React Hook that lets you add a state variable to your component.
    hint : should mutate value on every update, initialise dont invoke function, use immer in nested case.
14) useTransition --> useTransition is a React Hook that lets you update the state without blocking the UI.

====================================

Built-in component 

1) Fragment, profiler, strictMode, suspense